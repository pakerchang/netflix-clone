{"version":3,"sources":["Header.js","axios.js","requests.js","Banner.js","MovieRow.js","App.js","index.js"],"names":["Header","useState","show","handleShow","useEffect","window","addEventListener","scrollY","removeEventListener","className","src","alt","href","instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComdeyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","movie","setMovie","a","get","req","data","results","Math","floor","random","length","fetchData","console","log","style","backgroundImage","backdrop_path","backgroundSize","backgroundPosition","name","title","original_name","overview","substr","MovieRow","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","map","onClick","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","poster_path","id","videoId","opts","height","width","playerVars","autoplay","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.190738cf.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Header.css\";\n\nfunction Header() {\n\tconst [show, handleShow] = useState(false);\n\tuseEffect(() => {\n\t\twindow.addEventListener(\"scroll\", () => {\n\t\t\tif (window.scrollY > 100) {\n\t\t\t\thandleShow(true);\n\t\t\t} else handleShow(false);\n\t\t});\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\"scroll\");\n\t\t};\n\t}, []);\n\treturn (\n\t\t<div className={`header ${show && \"header__black\"}`}>\n\t\t\t<img\n\t\t\t\tsrc=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1200px-Netflix_2015_logo.svg.png\"\n\t\t\t\talt=\"Netflix Logo\"\n\t\t\t\tclassName=\"header__logo\"\n\t\t\t\thref=\"#\"\n\t\t\t/>\n\n\t\t\t<img\n\t\t\t\tsrc=\"https://occ-1-3594-3996.1.nflxso.net/dnm/api/v6/0RO1pLmU93-gdXvuxd_iYjzPqkc/AAAABZiSyrRci77umHuATdA0OCHdMx0Bb2mWhVc0ihermsQZehGuoO-ugrnHy8u8EoOh5NoAIDZTs4DzBgQKUJ8_GMvr3y4R.png?r=a41\"\n\t\t\t\talt=\"Netflix Logo\"\n\t\t\t\tclassName=\"header__avatar\"\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default Header;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n\tbaseURL: \"https://api.themoviedb.org/3\",\n});\n\n\n\nexport default instance;\n","const API_KEY = \"f48c83f1a2f413186327be34e394dd5c\";\n\nconst requests = {\n\tfetchTrending: `/trending/all/week?api_key=${API_KEY}&language=zh-TW`,\n\tfetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&language=zh-TW&with_networks=213&with_crew&with_people&include_video=true`,\n\tfetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=zh-TW`,\n\tfetchActionMovies: `/discover/movie?api_key=${API_KEY}&language=zh-TW&with_genres=28`,\n\tfetchComdeyMovies: `/discover/movie?api_key=${API_KEY}&language=zh-TW&with_genres=35`,\n\tfetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&language=zh-TW&with_genres=27`,\n\tfetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&language=zh-TW&with_genres=10749`,\n\tfetchDocumentaries: `/discover/movie?api_key=${API_KEY}&language=zh-TW&with_genres=99`,\n};\n\nexport default requests;\n\n\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"./axios\";\nimport requests from \"./requests\";\nimport \"./Banner.css\";\n\nfunction Banner() {\n\tconst [movie, setMovie] = useState([]);\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tconst req = await axios.get(\n\t\t\t\trequests.fetchNetflixOriginals\n\t\t\t);\n\t\t\tsetMovie(\n\t\t\t\treq.data.results[\n\t\t\t\t\tMath.floor(\n\t\t\t\t\t\tMath.random() * req.data.results.length - 1\n\t\t\t\t\t)\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\tconsole.log(movie);\n\tconst truncate = (str, n) => {\n\t\treturn str?.length > n\n\t\t\t? str.substr(0, n - 1) + \"...\"\n\t\t\t: str;\n\t};\n\treturn (\n\t\t<header\n\t\t\tclassName=\"banner\"\n\t\t\tstyle={{\n\t\t\t\tbackgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\n\t\t\t\tbackgroundSize: \"cover\",\n\t\t\t\tbackgroundPosition: \"center center\",\n\t\t\t}}>\n\t\t\t<div className=\"banner__contents\">\n\t\t\t\t<h1 className=\"banner__title\">\n\t\t\t\t\t{movie?.name ||\n\t\t\t\t\t\tmovie?.title ||\n\t\t\t\t\t\tmovie?.original_name}\n\t\t\t\t</h1>\n\t\t\t\t<div className=\"banner__btns\">\n\t\t\t\t\t<button className=\"banner__btn\">播放</button>\n\t\t\t\t\t<button className=\"banner__btn\">我的片單</button>\n\t\t\t\t</div>\n\t\t\t\t<h1 className=\"banner__description\">\n\t\t\t\t\t{truncate(movie?.overview, 200)}\n\t\t\t\t</h1>\n\t\t\t</div>\n            <div className=\"banner__fadeBottom\"></div>\n\t\t</header>\n\t);\n}\n\nexport default Banner;\n","import React, { useEffect, useState } from \"react\";\nimport YouTube from \"react-youtube\";\nimport axios from \"./axios\";\nimport movieTrailer from \"movie-trailer\";\nimport \"./MovieRow.css\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original\";\n\nfunction MovieRow({ title, fetchUrl, isLargeRow }) {\n\tconst [movies, setMovies] = useState([]);\n\tconst [trailerUrl, setTrailerUrl] = useState(\"\");\n\n\tconst opts = {\n\t\theight: \"390\",\n\t\twidth: \"100%\",\n\t\tplayerVars: {\n\t\t\t// https://developers.google.com/youtube/player_parameters\n\t\t\tautoplay: 1,\n\t\t},\n\t};\n\n\tconst handleClick = (movie) => {\n\t\t// if (trailerUrl) {\n\t\t// \tsetTrailerUrl(\"\");\n\t\t// } else {\n\t\t// \tmovieTrailer(movie?.name || \"\")\n\t\t// \t\t.then((url) => {\n\t\t// \t\t\tconst urlParams = new URLSearchParams(\n\t\t// \t\t\t\tnew URL(url).search\n\t\t// \t\t\t);\n\t\t// \t\t\tsetTrailerUrl(urlParams.get(\"v\"));\n\t\t// \t\t})\n\t\t// \t\t.catch((error) => console.log(error));\n\t\t// }\n\n\t\tif (trailerUrl) {\n\t\t\tsetTrailerUrl(\"\");\n\t\t} else {\n\t\t\tmovieTrailer(movie?.name || \"\")\n\t\t\t\t.then((url) => {\n\t\t\t\t\tconst urlParams = new URLSearchParams(\n\t\t\t\t\t\tnew URL(url).search\n\t\t\t\t\t);\n\t\t\t\t\tsetTrailerUrl(urlParams.get(\"v\"));\n\t\t\t\t})\n\t\t\t\t.catch((error) => console.log(error));\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tconst req = await axios.get(fetchUrl);\n\t\t\tsetMovies(req.data.results);\n\t\t\treturn req;\n\t\t}\n\t\tfetchData();\n\t}, [fetchUrl]);\n\n\treturn (\n\t\t<div className=\"movieRow\">\n\t\t\t<h2>{title}</h2>\n\t\t\t<div className=\"row__poster\">\n\t\t\t\t{movies.map((movie) => (\n\t\t\t\t\t<img\n\t\t\t\t\t\tkey={movie.id}\n\t\t\t\t\t\tonClick={() => handleClick(movie)}\n\t\t\t\t\t\tclassName={`posters__image ${\n\t\t\t\t\t\t\tisLargeRow && \"poster__largeRow\"\n\t\t\t\t\t\t}`}\n\t\t\t\t\t\tsrc={`${base_url}${\n\t\t\t\t\t\t\tisLargeRow\n\t\t\t\t\t\t\t\t? movie.poster_path\n\t\t\t\t\t\t\t\t: movie.backdrop_path\n\t\t\t\t\t\t}`}\n\t\t\t\t\t\talt={movie.name}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t{trailerUrl && (\n\t\t\t\t<YouTube videoId={trailerUrl} opts={opts} />\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default MovieRow;\n","import \"./App.css\";\nimport Header from \"./Header\";\nimport Banner from \"./Banner\";\nimport MovieRow from \"./MovieRow\";\nimport requests from \"./requests\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<Header />\n\t\t\t<Banner />\n\t\t\t<MovieRow\n\t\t\t\ttitle=\"NETFLIX ORIGINALS\"\n\t\t\t\tfetchUrl={requests.fetchNetflixOriginals}\n\t\t\t\tisLargeRow\n\t\t\t/>\n\t\t\t<MovieRow\n\t\t\t\ttitle=\"熱門\"\n\t\t\t\tfetchUrl={requests.fetchTrending}\n\t\t\t/>\n\t\t\t<MovieRow\n\t\t\t\ttitle=\"好評熱片\"\n\t\t\t\tfetchUrl={requests.fetchTopRated}\n\t\t\t/>\n\t\t\t<MovieRow\n\t\t\t\ttitle=\"動作\"\n\t\t\t\tfetchUrl={requests.fetchActionMovies}\n\t\t\t/>\n\t\t\t<MovieRow\n\t\t\t\ttitle=\"喜劇\"\n\t\t\t\tfetchUrl={requests.fetchComdeyMovies}\n\t\t\t/>\n\t\t\t<MovieRow\n\t\t\t\ttitle=\"恐怖\"\n\t\t\t\tfetchUrl={requests.fetchHorrorMovies}\n\t\t\t/>\n\t\t\t<MovieRow\n\t\t\t\ttitle=\"浪漫\"\n\t\t\t\tfetchUrl={requests.fetchRomanceMovies}\n\t\t\t/>\n\t\t\t<MovieRow\n\t\t\t\ttitle=\"紀錄片\"\n\t\t\t\tfetchUrl={requests.fetchDocumentaries}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}